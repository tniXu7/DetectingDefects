import React, { useState } from 'react';
import { useSelector, useDispatch } from 'react-redux';
import { RootState } from '../store/store';
import { logout } from '../store/authSlice';
import { addNotification } from '../store/notificationSlice';
import client from '../api/client';

const Profile: React.FC = () => {
  const { user, token } = useSelector((state: RootState) => state.auth);
  const dispatch = useDispatch();
  const [loading, setLoading] = useState(false);
  const [message, setMessage] = useState('');
  const [formData, setFormData] = useState({
    full_name: user?.full_name || '',
    email: user?.email || '',
  });

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value,
    });
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setMessage('');

    try {
      await client.put('/users/me', formData, {
        headers: { Authorization: `Bearer ${token}` },
      });
      setMessage('–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
      dispatch(addNotification({
        message: '–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!',
        type: 'success',
      }));
    } catch (error: any) {
      const errorMessage = error.response?.data?.detail || '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è';
      setMessage(errorMessage);
      dispatch(addNotification({
        message: errorMessage,
        type: 'error',
      }));
    } finally {
      setLoading(false);
    }
  };

  const handleLogout = () => {
    dispatch(logout());
  };

  return (
    <div className="main-content">
      <div className="card">
        <div className="card-header">
          <h1 className="card-title">–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h1>
        </div>

        <div className="d-flex gap-3" style={{ flexWrap: 'wrap' }}>
          <div className="card" style={{ flex: '1', minWidth: '300px' }}>
            <h3 style={{ color: '#667eea', marginBottom: '1rem' }}>üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</h3>
            <div className="user-info">
              <div className="d-flex justify-content-between mb-2">
                <strong>–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</strong>
                <span>{user?.username}</span>
              </div>
              <div className="d-flex justify-content-between mb-2">
                <strong>–†–æ–ª—å:</strong>
                <span className="status-badge status-new">{user?.role}</span>
              </div>
              <div className="d-flex justify-content-between mb-2">
                <strong>–ü–æ–ª–Ω–æ–µ –∏–º—è:</strong>
                <span>{user?.full_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
              </div>
              <div className="d-flex justify-content-between mb-2">
                <strong>Email:</strong>
                <span>{user?.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
              </div>
            </div>
          </div>

          <div className="card" style={{ flex: '1', minWidth: '300px' }}>
            <h3 style={{ color: '#667eea', marginBottom: '1rem' }}>‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å</h3>
            <form onSubmit={handleSubmit}>
              <div className="form-group">
                <label className="form-label">–ü–æ–ª–Ω–æ–µ –∏–º—è</label>
                <input
                  type="text"
                  name="full_name"
                  className="form-input"
                  value={formData.full_name}
                  onChange={handleChange}
                />
              </div>
              <div className="form-group">
                <label className="form-label">Email</label>
                <input
                  type="email"
                  name="email"
                  className="form-input"
                  value={formData.email}
                  onChange={handleChange}
                />
              </div>
              {message && (
                <div className={`mb-2 ${message.includes('—É—Å–ø–µ—à–Ω–æ') ? 'text-success' : 'text-danger'}`}>
                  {message}
                </div>
              )}
              <button
                type="submit"
                className="btn btn-primary"
                disabled={loading}
              >
                {loading ? <span className="spinner"></span> : '–û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å'}
              </button>
            </form>
          </div>
        </div>

        <div className="card mt-3">
          <h3 style={{ color: '#667eea', marginBottom: '1rem' }}>üîê –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h3>
          <div className="d-flex gap-2" style={{ flexWrap: 'wrap' }}>
            <button className="btn btn-secondary">
              –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å
            </button>
            <button className="btn btn-danger" onClick={handleLogout}>
              –í—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Profile;
