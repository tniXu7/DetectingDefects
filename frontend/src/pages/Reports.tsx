import React, { useEffect, useState } from 'react';
import { useSelector } from 'react-redux';
import { RootState } from '../store/store';
import client from '../api/client';

interface Project {
  id: number;
  name: string;
}

const Reports: React.FC = () => {
  const { token } = useSelector((state: RootState) => state.auth);
  const [projects, setProjects] = useState<Project[]>([]);
  const [selectedProject, setSelectedProject] = useState<number | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetchProjects();
  }, []);

  const fetchProjects = async () => {
    try {
      const response = await client.get('/projects/', {
        headers: { Authorization: `Bearer ${token}` },
      });
      setProjects(response.data);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤:', error);
    } finally {
      setLoading(false);
    }
  };

  const downloadCSV = async () => {
    try {
      const url = selectedProject 
        ? `/reports/defects/csv?project_id=${selectedProject}`
        : '/reports/defects/csv';
      
      const response = await client.get(url, {
        headers: { Authorization: `Bearer ${token}` },
        responseType: 'blob',
      });

      // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
      const blob = new Blob([response.data], { type: 'text/csv' });
      const url_blob = window.URL.createObjectURL(blob);
      const link = document.createElement('a');
      link.href = url_blob;
      link.download = `defects_report_${selectedProject ? `project_${selectedProject}` : 'all'}.csv`;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      window.URL.revokeObjectURL(url_blob);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞:', error);
    }
  };

  if (loading) {
    return (
      <div className="main-content">
        <div className="card">
          <div className="text-center">
            <span className="spinner"></span>
            <p className="mt-2">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤...</p>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="main-content">
      <div className="card">
        <div className="card-header">
          <h1 className="card-title">–û—Ç—á–µ—Ç—ã</h1>
        </div>

        <div className="mb-3">
          <h3 style={{ color: '#667eea', marginBottom: '1rem' }}>üìä –≠–∫—Å–ø–æ—Ä—Ç –¥–µ—Ñ–µ–∫—Ç–æ–≤ –≤ CSV</h3>
          <p style={{ color: '#666', marginBottom: '1.5rem' }}>
            –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –∏–ª–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ –¥–µ—Ñ–µ–∫—Ç—ã
          </p>
          
          <div className="form-group">
            <label className="form-label">–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</label>
            <select
              className="form-select"
              value={selectedProject || ''}
              onChange={(e) => setSelectedProject(e.target.value ? Number(e.target.value) : null)}
            >
              <option value="">–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã</option>
              {projects.map((project) => (
                <option key={project.id} value={project.id}>
                  {project.name}
                </option>
              ))}
            </select>
          </div>

          <button
            className="btn btn-success"
            onClick={downloadCSV}
            disabled={projects.length === 0}
          >
            üì• –°–∫–∞—á–∞—Ç—å CSV –æ—Ç—á–µ—Ç
          </button>
        </div>

        <div className="card" style={{ background: 'rgba(102, 126, 234, 0.05)' }}>
          <h3 style={{ color: '#667eea', marginBottom: '1rem' }}>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç—á–µ—Ç–µ</h3>
          <p style={{ color: '#666', marginBottom: '1rem' }}>
            CSV —Ñ–∞–π–ª –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:
          </p>
          <ul style={{ color: '#666', paddingLeft: '1.5rem' }}>
            <li>ID –¥–µ—Ñ–µ–∫—Ç–∞</li>
            <li>–ù–∞–∑–≤–∞–Ω–∏–µ –¥–µ—Ñ–µ–∫—Ç–∞</li>
            <li>–û–ø–∏—Å–∞–Ω–∏–µ</li>
            <li>–°—Ç–∞—Ç—É—Å</li>
            <li>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç</li>
            <li>ID –ø—Ä–æ–µ–∫—Ç–∞</li>
            <li>–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π</li>
            <li>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</li>
            <li>–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</li>
          </ul>
        </div>

        {projects.length === 0 && (
          <div className="card" style={{ background: 'rgba(255, 193, 7, 0.1)', border: '1px solid rgba(255, 193, 7, 0.3)' }}>
            <h3 style={{ color: '#856404', marginBottom: '1rem' }}>‚ö†Ô∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤</h3>
            <p style={{ color: '#856404' }}>
              –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç—ã. 
              –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–ü—Ä–æ–µ–∫—Ç—ã" –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.
            </p>
          </div>
        )}
      </div>
    </div>
  );
};

export default Reports;